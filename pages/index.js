import Head from 'next/head'
import { useEffect, useState } from 'react'
import { cryptPin, _csrfTokenCreate, _csrfTokenDecode } from '../lib/hashing'
import { _validatePin } from '../lib/validator'



const allPins = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]

const Home =({token}) => {

  const [isHide, setIsHide] = useState(false)
  const [codes, setCodes] = useState([])

  useEffect(() => { 
    const text = document.getElementById("recipient");
    const limit = 13;
    const truncated = text.innerText.substring(0, limit) + "...";
    text.innerText = truncated;
  }, [])

  const _addBorder = (length) => {
    for (let i = 1; i <= 4; i++) {
      const borders = document.getElementById(`border${i}`);
      if (length === i) {
        borders.style.backgroundColor = "gray";
      } else {
        borders.style.backgroundColor = "lightgray";
      }
    }
  }

  const _pinClick = key => {
    let length = codes.length
    if (length == 4) {
      return
    }

    let pins = [...codes, ...[key]]
    length = pins.length
    _addBorder(length)
    setCodes(pins)
  }

  const _deleteInput = () => {
    let pins = [...codes]
    pins.pop()
    setCodes(pins)

    let length = pins.length
    _addBorder(length)
  }

  const _submit = () => {
    let pinstr = codes.toLocaleString()
    let pin = cryptPin(pinstr)
    document.getElementById("pin").value = pin
    _validatePin(codes)
  }
  

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="top">
        <p>ICICI Bank</p>
        <p>XXXXXX65</p>
      </div>

      <div className="header">
        <p>Sending &#8377; 100.00</p>
        <div>
          <p id="recipient">To: Vivek Kumar Singh</p>
          <i className="fa-solid fa-chevron-down"></i>
        </div>
      </div>

      <div className="body">
        <p>ENTER 4-DIGIT UPI PIN</p>
        <div className="input-number">
          <div id="input">
            {
              codes.map((code, index) => {
                return <p className="code" key={index}>{isHide ? "â€¢" : code}</p>
              })
            }
          </div>
        </div>
        <div className="input-border">
          <div id="border1"></div>
          <div id="border2"></div>
          <div id="border3"></div>
          <div id="border4"></div>
        </div>
        <div className="toggleText">
          <i className="fa-solid fa-eye"></i>
          <p onClick={() => setIsHide(!isHide)} id="toggleText">{isHide ? "SHOW" : "HIDE"}</p>
        </div>
        <p>
          <i className="fa-solid fa-circle-info"></i> You are transferring money from
          your account to Vivek Kumar Singh
        </p>
      </div>

      <div className="keypad">
        {
          allPins.map((pins, index) => {
            return (
              <div key={index}>
                {
                  pins.map((pin, pindex) => {
                    return <button key={pindex} onClick={() => _pinClick(pin)}>{pin}</button>
                  }) 
                }
              </div>
            )
          })
        }
        <div>
          <i className="fa-solid fa-delete-left" onClick={() => _deleteInput()}></i>
          <button onClick={() => _pinClick(0)}>0</button>
          <i className="fa-solid fa-circle-check" onClick={() => _submit()}></i>
        </div>
      </div>

      <form action='/api/pin' method='post' id='form'>
        <input type={"hidden"} name="_csrf" value={token} />
        <input type={"hidden"} name="pin" id='pin' value={""} />
      </form>

    </>
  )
}

Home.getInitialProps = async ({req}) => {
  let token = _csrfTokenCreate(req)
  return { token }
}

export default Home